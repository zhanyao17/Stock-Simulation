{"message":"unused imports: `mpsc::channel`, `ops::Deref`, `self`, `spawn`, `str::Bytes`, `time::Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bin/tsting.rs","byte_start":10,"byte_end":20,"line_start":1,"line_end":1,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":22,"byte_end":32,"line_start":1,"line_end":1,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":23,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":41,"byte_end":54,"line_start":1,"line_end":1,"column_start":42,"column_end":55,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":42,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":78,"byte_end":82,"line_start":1,"line_end":1,"column_start":79,"column_end":83,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":79,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":84,"byte_end":89,"line_start":1,"line_end":1,"column_start":85,"column_end":90,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":85,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":92,"byte_end":106,"line_start":1,"line_end":1,"column_start":93,"column_end":107,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":93,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/bin/tsting.rs","byte_start":10,"byte_end":34,"line_start":1,"line_end":1,"column_start":11,"column_end":35,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":11,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":41,"byte_end":56,"line_start":1,"line_end":1,"column_start":42,"column_end":57,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":42,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":67,"byte_end":106,"line_start":1,"line_end":1,"column_start":68,"column_end":107,"is_primary":true,"text":[{"text":"use std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};","highlight_start":68,"highlight_end":107}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `mpsc::channel`, `ops::Deref`, `self`, `spawn`, `str::Bytes`, `time::Duration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/tsting.rs:1:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{ops::Deref, str::Bytes, sync::{mpsc::channel, Arc, Mutex}, thread::{self, spawn}, time::Duration, vec};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"fields `name` and `value` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bin/tsting.rs","byte_start":174,"byte_end":179,"line_start":5,"line_end":5,"column_start":12,"column_end":17,"is_primary":false,"text":[{"text":"pub struct Stock{","highlight_start":12,"highlight_end":17}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":185,"byte_end":189,"line_start":6,"line_end":6,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    name:String,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/tsting.rs","byte_start":202,"byte_end":207,"line_start":7,"line_end":7,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    value:f64,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`Stock` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `name` and `value` are never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/tsting.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Stock{\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    name:String,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    value:f64,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `Stock` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
